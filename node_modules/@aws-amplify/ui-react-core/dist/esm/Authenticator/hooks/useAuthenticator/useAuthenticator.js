import { __rest } from '../../../node_modules/tslib/tslib.es6.js';
import React, { useCallback, useMemo } from 'react';
import { useSelector } from '@xstate/react';
import { getServiceFacade } from '@aws-amplify/ui';
import 'react/jsx-runtime';
import { AuthenticatorContext } from '../../context/AuthenticatorContext.js';
import { USE_AUTHENTICATOR_ERROR } from './constants.js';
import { getQRFields, getMachineFields, getTotpSecretCodeCallback, getComparator, defaultComparator } from './utils.js';

/**
 * [ðŸ“– Docs](https://ui.docs.amplify.aws/react/connected-components/authenticator/headless#useauthenticator-hook)
 */
function useAuthenticator(selector) {
    const context = React.useContext(AuthenticatorContext);
    if (!context) {
        throw new Error(USE_AUTHENTICATOR_ERROR);
    }
    const { service } = context;
    const { send } = service;
    const xstateSelector = useCallback((state) => (Object.assign({}, getServiceFacade({ send, state }))), [send]);
    const comparator = selector ? getComparator(selector) : defaultComparator;
    const facade = useSelector(service, xstateSelector, comparator);
    const { route, unverifiedContactMethods, user } = facade, rest = __rest(facade, ["route", "unverifiedContactMethods", "user"]);
    // do not memoize output. `service.getSnapshot` reference remains stable preventing
    // `fields` from updating with current form state on value changes
    const serviceSnapshot = service.getSnapshot();
    // legacy `QRFields` values only used for SetupTOTP page to retrieve issuer information, will be removed in future
    const QRFields = useMemo(() => getQRFields(serviceSnapshot), [serviceSnapshot]);
    // legacy `formFields` values required until form state is removed from state machine
    const fields = useMemo(() => getMachineFields(route, serviceSnapshot, unverifiedContactMethods), [route, serviceSnapshot, unverifiedContactMethods]);
    return Object.assign(Object.assign({}, rest), { getTotpSecretCode: getTotpSecretCodeCallback(user), route,
        unverifiedContactMethods,
        user,
        /** @deprecated For internal use only */
        fields,
        /** @deprecated For internal use only */
        QRFields });
}

export { useAuthenticator as default };
