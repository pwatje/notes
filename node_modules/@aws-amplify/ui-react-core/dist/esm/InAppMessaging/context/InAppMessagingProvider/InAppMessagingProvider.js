import { jsx } from 'react/jsx-runtime';
import { useState, useEffect, useCallback, useMemo } from 'react';
import { Notifications } from '@aws-amplify/notifications';
import InAppMessagingContext from '../InAppMessagingContext/InAppMessagingContext.js';

const { InAppMessaging } = Notifications;
function InAppMessagingProvider({ children, }) {
    const [message, setMessage] = useState(null);
    useEffect(() => {
        const listener = InAppMessaging.onMessageReceived((message) => {
            setMessage(message);
        });
        return listener.remove;
    }, []);
    const clearMessage = useCallback(() => {
        setMessage(null);
    }, []);
    const value = useMemo(() => ({
        clearMessage,
        displayMessage: setMessage,
        message,
    }), [clearMessage, message]);
    return (jsx(InAppMessagingContext.Provider, Object.assign({ value: value }, { children: children })));
}

export { InAppMessagingProvider as default };
