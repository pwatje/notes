import{__rest as e}from"tslib";import{jsxs as a,jsx as s}from"react/jsx-runtime";import*as r from"react";import i from"classnames";import{classNameModifierByFlag as o,classNameModifier as t}from"../shared/utils.js";import{ComponentClassNames as l}from"../shared/constants.js";import{Flex as c}from"../Flex/Flex.js";import"../Field/FieldClearButton.js";import"../Field/FieldDescription.js";import{FieldErrorMessage as d}from"../Field/FieldErrorMessage.js";import{Input as h}from"../Input/Input.js";import{Label as m}from"../Label/Label.js";import{useStableId as n}from"../utils/useStableId.js";import{useSwitch as b}from"./useSwitch.js";import{View as p}from"../View/View.js";import{VisuallyHidden as u}from"../VisuallyHidden/VisuallyHidden.js";const k=r.forwardRef(((r,k)=>{var{className:f,defaultChecked:C,id:w,isChecked:j,isDisabled:S,isLabelHidden:g,label:F,labelPosition:N,name:T,onChange:x,size:H,thumbColor:L,trackCheckedColor:O,trackColor:v,value:y,hasError:D,errorMessage:E}=r,I=e(r,["className","defaultChecked","id","isChecked","isDisabled","isLabelHidden","label","labelPosition","name","onChange","size","thumbColor","trackCheckedColor","trackColor","value","hasError","errorMessage"]);const{isOn:M,changeHandler:V,isFocused:z,setIsFocused:B}=b({onChange:x,isChecked:j,defaultChecked:C,isDisabled:S}),P=n(w),W=g?u:p,R=i(l.SwitchTrack,o(l.SwitchTrack,"checked",M),o(l.SwitchTrack,"disabled",S),o(l.SwitchTrack,"focused",z),o(l.SwitchTrack,"error",D)),q=i(l.SwitchThumb,o(l.SwitchThumb,"checked",M),o(l.SwitchThumb,"disabled",S));return a(c,Object.assign({className:i(l.SwitchField,t(l.SwitchField,H),f),"data-size":H,"data-label-position":N,ref:k},I,{children:[s(u,{children:s(h,{role:"switch",type:"checkbox",id:P,onChange:V,disabled:S,name:T,checked:M,value:y,onFocus:()=>{B(!0)},onBlur:()=>{B(!1)}})}),a(m,Object.assign({htmlFor:P,className:i(l.SwitchWrapper,t(l.SwitchWrapper,N)),"data-label-position":N},{children:[s(W,Object.assign({as:"span",className:l.SwitchLabel},{children:F})),s(p,Object.assign({as:"span",className:R,"data-checked":M,"data-disabled":S,"data-focused":z,backgroundColor:M?O:v},{children:s(p,{as:"span",className:q,"data-checked":M,"data-disabled":S,backgroundColor:L})}))]})),s(d,{hasError:D,errorMessage:E})]}))}));k.displayName="SwitchField";export{k as SwitchField};
