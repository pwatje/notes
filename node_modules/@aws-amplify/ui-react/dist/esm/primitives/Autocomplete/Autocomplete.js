import{__rest as e}from"tslib";import{jsx as o,jsxs as n}from"react/jsx-runtime";import t from"classnames";import*as i from"react";import{AutocompleteOption as a}from"./AutocompleteOption.js";import{AutocompleteMenu as l}from"./AutocompleteMenu.js";import{useAutocomplete as r}from"./useAutocomplete.js";import{HighlightMatch as s}from"../HighlightMatch/HighlightMatch.js";import{SearchField as c}from"../SearchField/SearchField.js";import{View as u}from"../View/View.js";import{isFunction as m}from"../shared/utils.js";import{ComponentClassNames as d}from"../shared/constants.js";const p=(i,p)=>{var{className:h,defaultValue:f,value:g,isLoading:C=!1,menuSlots:O={},options:b,optionFilter:j,onBlur:v,onChange:I,onClear:S,onClick:M,onSelect:w,onSubmit:x,renderOption:A,testId:B}=i,V=e(i,["className","defaultValue","value","isLoading","menuSlots","options","optionFilter","onBlur","onChange","onClear","onClick","onSelect","onSubmit","renderOption","testId"]);const{activeOptionId:k,autocompleteId:F,composedValue:y,filteredOptions:D,handleOnBlur:N,handleOnClear:L,handleOnClick:H,handleOnChange:K,handleOnKeyDown:$,isControlled:q,isCustomFiltering:R,isMenuOpen:z,listboxId:E,menuId:G,optionBaseId:J,setActiveOption:P,setIsMenuOpen:Q,setInternalValue:T}=r({defaultValue:f,value:g,options:b,optionFilter:j,onBlur:v,onChange:I,onClear:S,onClick:M,onSelect:w,onSubmit:x}),U={role:"combobox","aria-activedescendant":k,"aria-autocomplete":"list","aria-controls":z?G:void 0,"aria-expanded":z,"aria-haspopup":"listbox","aria-owns":z?G:void 0},W=D.map(((n,t)=>{const{id:i,label:l}=n,r=e(n,["id","label"]),c=null!=i?i:`${J}-option-${t}`,u=c===k;return o(a,Object.assign({isActive:u,id:c,onClick:()=>{Q(!1),P(null),q||T(l),m(w)&&w(n)},onMouseDown:e=>{e.preventDefault()},onMouseMove:()=>{P(n)}},r,{children:m(A)?A(n,y):R?l:o(s,Object.assign({query:y},{children:l}))}),c)}));return n(u,Object.assign({className:t(d.Autocomplete,h),id:F,testId:B},{children:[o(c,Object.assign({hasSearchButton:!1,hasSearchIcon:!0,onBlur:N,onChange:K,onClear:L,onClick:H,onKeyDown:$,ref:p,value:y},U,V)),z?o(l,Object.assign({id:G,isLoading:C,listboxId:E},O,{children:W})):null]}))},h=i.forwardRef(p);h.displayName="Autocomplete";export{h as Autocomplete,p as AutocompletePrimitive};
