import*as e from"react";import{ESCAPE_KEY as a,ENTER_KEY as l}from"../shared/constants.js";import{isFunction as o}from"../shared/utils.js";import{useComposeRefsCallback as n}from"../../hooks/useComposeRefsCallback.js";const s=new Set([a,l]),t=({defaultValue:t="",value:r,onChange:u,onClear:c,onSubmit:f,externalRef:m})=>{const C=void 0!==r,[i,d]=e.useState(t),k=C?r:i,p=e.useRef(null),b=n({externalRef:m,internalRef:p}),h=e.useCallback((()=>{var e;C||d(""),null===(e=null==p?void 0:p.current)||void 0===e||e.focus(),o(c)&&c()}),[C,d,c]),v=e.useCallback((e=>{o(f)&&f(e)}),[f]),R=e.useCallback((e=>{const{key:o}=e;s.has(o)&&(e.preventDefault(),o===a?h():o===l&&v(k))}),[k,h,v]),g=e.useCallback((e=>{C||d(e.target.value),o(u)&&u(e)}),[C,u,d]),j=e.useCallback((()=>{v(k)}),[v,k]);return{composedValue:k,onClearHandler:h,onKeyDown:R,onClick:j,handleOnChange:g,composedRefs:b}};export{t as useSearchField};
