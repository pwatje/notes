import{__rest as e}from"tslib";import{jsx as a}from"react/jsx-runtime";import*as l from"react";import{Root as r}from"@radix-ui/react-accordion";import s from"classnames";import{useDeprecationWarning as t}from"../../hooks/useDeprecationWarning.js";import{ComponentClassNames as n}from"../shared/constants.js";import{splitPrimitiveProps as o}from"../shared/styleUtils.js";const i=l.forwardRef(((l,i)=>{var{children:p,className:d,defaultValue:m,isCollapsible:u,onChange:c,onValueChange:f,testId:h,type:g="single",value:C}=l,V=e(l,["children","className","defaultValue","isCollapsible","onChange","onValueChange","testId","type","value"]);const{rest:x}=o(V),b=null!=f?f:c;t({shouldWarn:!!c,message:"Expander `onChange` prop will be deprecated in the next major release of @aws-amplify/ui-react. Please replace usage with `onValueChange`."});return a(r,"multiple"===g?Object.assign({className:s(n.Expander,d),"data-testid":h,defaultValue:m,onValueChange:b,ref:i,type:g,value:C},x,{children:p}):Object.assign({className:s(n.Expander,d),collapsible:u,"data-testid":h,defaultValue:m,onValueChange:b,ref:i,type:g,value:C},x,{children:p}))}));i.displayName="Expander";export{i as Expander};
